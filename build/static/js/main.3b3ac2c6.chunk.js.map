{"version":3,"sources":["Home.js","login.js","Create.js","Navigate.js","App.js","serviceWorker.js","index.js"],"names":["Home","state","Login","useState","user","setUser","pass","setPass","style","marginTop","justifyContent","alignItems","background","borderRadius","marginLeft","marginRight","Form","display","Group","flexdirection","Label","Control","onChange","name","target","value","type","Button","marginBottom","alignSelf","className","variant","onClick","a","axios","post","email","password","headers","response","console","log","data","get","Authorization","token","message","urlGenerator","file","URL","createObjectURL","reducer","action","firstname","payload","lastname","username","mobile","address","image","Create","useReducer","dispatch","borderColor","controlId","placeholder","text","InputGroup","FormFileInput","files","Image","src","color","rounded","height","width","justifySelf","Navigate","Navbar","bg","expand","Brand","href","Nav","Link","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3b3ac2c6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Home = ({ state }) => {\r\n  return (\r\n    <div>\r\n      <h1>Home Widow</h1>\r\n      <label>{state}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Nav, Toast } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Home from \"./Home\";\r\nconst Login = () => {\r\n  const [user, setUser] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: 100,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        background: \"#B3B6B7\",\r\n        borderRadius: 6,\r\n        marginLeft: 500,\r\n        marginRight: 500,\r\n      }}\r\n    >\r\n      <Form style={{ display: \"table\", marginLeft: 150, marginRight: 150 }}>\r\n        <Form.Group\r\n          style={{\r\n            flexdirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            onChange={(name) => {\r\n              setUser(name.target.value);\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group\r\n          style={{\r\n            flexdirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            onChange={(name) => {\r\n              setPass(name.target.value);\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button\r\n          style={{ marginBottom: 10, alignSelf: \"normal\" }}\r\n          className=\"FormControl\"\r\n          variant=\"primary\"\r\n          onClick={async () => {\r\n            try {\r\n              const response = await axios.post(\r\n                \"https://cors-anywhere.herokuapp.com/http://347c2343.ngrok.io/signin\",\r\n                { email: user, password: pass },\r\n                {\r\n                  headers: { \"Content-Type\": \"application/json\" },\r\n                }\r\n              );\r\n              console.log(response.data);\r\n              try {\r\n                const user = await axios.get(\r\n                  \"https://cors-anywhere.herokuapp.com/http://347c2343.ngrok.io/\",\r\n                  {\r\n                    headers: { Authorization: `Bearer ${response.data.token}` },\r\n                  }\r\n                );\r\n\r\n                console.log(\"User : \" + user.data);\r\n              } catch (error) {\r\n                console.log(error.message);\r\n              }\r\n            } catch (error) {\r\n              console.log(error.message);\r\n            }\r\n          }}\r\n        >\r\n          Sign in\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useReducer } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  InputGroup,\r\n  Image,\r\n  CardImg,\r\n  Toast,\r\n} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport FormFileInput from \"react-bootstrap/FormFileInput\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nconst urlGenerator = (file) => {\r\n  return URL.createObjectURL(file);\r\n};\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FirstName\":\r\n      return { ...state, firstname: action.payload };\r\n    case \"LastName\":\r\n      return { ...state, lastname: action.payload };\r\n    case \"Email\":\r\n      return { ...state, email: action.payload };\r\n    case \"UserName\":\r\n      return { ...state, username: action.payload };\r\n    case \"Mobile\":\r\n      return { ...state, mobile: action.payload };\r\n    case \"Address\":\r\n      return { ...state, address: action.payload };\r\n    case \"Password\":\r\n      return { ...state, password: action.payload };\r\n    case \"Image\":\r\n      return { ...state, image: action.payload };\r\n  }\r\n};\r\n\r\nconst Create = () => {\r\n  const [state, dispatch] = useReducer(reducer, {});\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: 100,\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        background: \"#B3B6B7\",\r\n        marginLeft: 350,\r\n        marginRight: 350,\r\n        borderRadius: 6,\r\n        borderColor: \"#17202A\",\r\n      }}\r\n    >\r\n      <Form\r\n        style={{\r\n          display: \"table\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          marginTop: 30,\r\n        }}\r\n      >\r\n        <Form.Group controlId=\"formBasicFirstName\" style={{ display: \"flex\" }}>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            className=\"FormControl\"\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            onChange={(text) => {\r\n              return dispatch({\r\n                type: \"Email\",\r\n                payload: text.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicFirstName\" style={{ display: \"flex\" }}>\r\n          <Form.Label>FirstName</Form.Label>\r\n          <Form.Control\r\n            className=\"FormControl\"\r\n            type=\"text\"\r\n            placeholder=\"Enter First Name\"\r\n            onChange={(text) => {\r\n              return dispatch({\r\n                type: \"FirstName\",\r\n                payload: text.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicLastName\" style={{ display: \"flex\" }}>\r\n          <Form.Label>LastName</Form.Label>\r\n          <Form.Control\r\n            className=\"FormControl\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Last Name\"\r\n            onChange={(text) => {\r\n              return dispatch({\r\n                type: \"LastName\",\r\n                payload: text.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicUserName\" style={{ display: \"flex\" }}>\r\n          <Form.Label>UserName</Form.Label>\r\n          <Form.Control\r\n            className=\"FormControl\"\r\n            type=\"text\"\r\n            placeholder=\"Enter UserName\"\r\n            onChange={(text) => {\r\n              return dispatch({\r\n                type: \"UserName\",\r\n                payload: text.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicMobile\" style={{ display: \"flex\" }}>\r\n          <Form.Label>Mobile</Form.Label>\r\n          <Form.Control\r\n            className=\"FormControl\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Mobile Number including country code\"\r\n            onChange={(text) => {\r\n              return dispatch({\r\n                type: \"Mobile\",\r\n                payload: text.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicAddress\" style={{ display: \"flex\" }}>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            className=\"FormControl\"\r\n            type=\"text-area\"\r\n            placeholder=\"Enter Address\"\r\n            onChange={(text) => {\r\n              return dispatch({\r\n                type: \"Address\",\r\n                payload: text.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicPassword\" style={{ display: \"flex\" }}>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            className=\"FormControl\"\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            onChange={(text) => {\r\n              return dispatch({\r\n                type: \"Password\",\r\n                payload: text.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <InputGroup>\r\n          <FormFileInput\r\n            onChange={(file) => {\r\n              return dispatch({\r\n                type: \"Image\",\r\n                payload: urlGenerator(file.target.files[0]),\r\n              });\r\n            }}\r\n          />\r\n        </InputGroup>\r\n        }>\r\n        <Button\r\n          className=\"FormControl\"\r\n          variant=\"outline-primary\"\r\n          onClick={async () => {\r\n            try {\r\n              const response = await axios.post(\r\n                \"https://cors-anywhere.herokuapp.com/http://347c2343.ngrok.io/signup\",\r\n                { ...state },\r\n                {\r\n                  headers: { \"Content-Type\": \"application/json\" },\r\n                }\r\n              );\r\n\r\n              console.log(response.data);\r\n              try {\r\n                const user = await axios.get(\r\n                  \"https://cors-anywhere.herokuapp.com/http://347c2343.ngrok.io/\",\r\n                  {\r\n                    headers: {\r\n                      Authorization: `Bearer ${response.data.token}`,\r\n                    },\r\n                  }\r\n                );\r\n                console.log(\"User : \" + user.data);\r\n              } catch (error) {\r\n                console.log(\"Error getting user !!\" + error.message);\r\n              }\r\n            } catch (e) {\r\n              console.log(\"Error !!!\", e.message);\r\n            }\r\n          }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      <Image\r\n        src={state.image}\r\n        color=\"white\"\r\n        rounded\r\n        style={{\r\n          height: 300,\r\n          width: 300,\r\n          justifySelf: \"right\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import React from \"react\";\r\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\n\r\nconst Navigate = () => {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand href=\"/\">DBOI Home</Navbar.Brand>\r\n      <Nav.Link href=\"/signup\">Signup</Nav.Link>\r\n      <Nav.Link href=\"/signin\">Signin</Nav.Link>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigate;\r\n","import React, { useReducer } from \"react\";\nimport Login from \"./login\";\nimport Home from \"./Home\";\nimport Create from \"./Create\";\nimport \"./App.css\";\nimport Navigate from \"./Navigate\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigate />\n      <Router>\n        <Switch>\n          <Route path=\"/Home\" exact component={Home} />\n          <Route path=\"/signin\" component={Login} />; }} />\n          <Route path=\"/signup\" component={Create} />; />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}